{"version":3,"sources":["../../src/controller/profile.js"],"names":["config","db","api","post","req","res","newUser","email","body","first_name","last_name","about","phone","verified","profile_image_uri","save","err","status","json","message","get","findOne","params","exec","userData","put","findById","id","user","send","delete","remove","_id","find","users"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAIe,gBAAkB;AAAA,MAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAC7B,MAAIC,MAAM,sBAAV;;AAGA;AACAA,MAAIC,IAAJ,CAAS,MAAT,gCAA8B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxC,QAAIC,UAAU,oBAAd;;AAECA,YAAQC,KAAR,GAAgBH,IAAII,IAAJ,CAASD,KAAzB;AACAD,YAAQG,UAAR,GAAqBL,IAAII,IAAJ,CAASC,UAA9B;AACAH,YAAQI,SAAR,GAAqBN,IAAII,IAAJ,CAASE,SAA9B;AACAJ,YAAQK,KAAR,GAAgBP,IAAII,IAAJ,CAASG,KAAzB;AACAL,YAAQM,KAAR,GAAgBR,IAAII,IAAJ,CAASI,KAAzB;AACAN,YAAQO,QAAR,GAAoBT,IAAII,IAAJ,CAASK,QAA7B;AACAP,YAAQQ,iBAAR,GAA4BV,IAAII,IAAJ,CAASM,iBAArC;;AAEFR,YAAQS,IAAR,CAAa,eAAO;AAChB,UAAIC,GAAJ,EAAQ;AACNX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,GAAX,EAArB;AACD;AACCX,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,mCAAV,EAArB;AAEP,KANC;AAOH,GAlBC;;AAqBF;AACAjB,MAAIkB,GAAJ,CAAQ,iBAAR,gCAAyC,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACrD,mBAAKgB,OAAL,CAAa,EAAE,SAASjB,IAAIkB,MAAJ,CAAWf,KAAtB,EAAb,EACGgB,IADH,CACQ,UAACP,GAAD,EAAMQ,QAAN,EAAmB;AACvB,UAAIR,GAAJ,EAAS;AACPX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,GAAX,EAArB;AACD;AACDX,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,QAArB;AACD,KANH;AAOD,GARD;;AAUF;AACEtB,MAAIuB,GAAJ,CAAQ,MAAR,EAAgB,UAACrB,GAAD,EAAKC,GAAL,EAAa;AAC7B,mBAAKqB,QAAL,CAActB,IAAIkB,MAAJ,CAAWK,EAAzB,EAA6B,UAACX,GAAD,EAAMY,IAAN,EAAe;AAC1C,UAAIZ,GAAJ,EAAQ;AACNX,YAAIwB,IAAJ,CAASb,GAAT;AACD;AACDV,cAAQG,UAAR,GAAqBL,IAAII,IAAJ,CAASC,UAA9B;AACAH,cAAQI,SAAR,GAAqBN,IAAII,IAAJ,CAASE,SAA9B;AACAJ,cAAQK,KAAR,GAAgBP,IAAII,IAAJ,CAASG,KAAzB;AACAL,cAAQM,KAAR,GAAgBR,IAAII,IAAJ,CAASI,KAAzB;AACAN,cAAQO,QAAR,GAAoBT,IAAII,IAAJ,CAASK,QAA7B;AACAP,cAAQQ,iBAAR,GAA4BV,IAAII,IAAJ,CAASM,iBAArC;;AAEFR,cAAQS,IAAR,CAAa,eAAO;AAChB,YAAIC,GAAJ,EAAQ;AACNX,cAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,GAAX,EAArB;AACD;AACCX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,uBAAV,EAArB;AACJ,OALF;AAMD,KAjBC;AAmBD,GApBC;;AAuBF;AACAjB,MAAI4B,MAAJ,CAAW,MAAX,gCAAiC,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AAC7C,mBAAK0B,MAAL,CAAY;AACVC,WAAK5B,IAAIkB,MAAJ,CAAWK;AADN,KAAZ,EAEG,UAACX,GAAD,EAAMY,IAAN,EAAe;AAChB,UAAIZ,GAAJ,EAAS;AACPX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,GAAX,EAArB;AACD;AACDX,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,2BAAX,EAArB;AACD,KAPD;AAQD,GATD;;AAWA;AACAjB,MAAI4B,MAAJ,CAAW,GAAX,gCAA8B,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AAC1C,mBAAK4B,IAAL,CAAU,EAAV,EAAc,UAACjB,GAAD,EAAMkB,KAAN,EAAgB;AAC5B,UAAIlB,GAAJ,EAAS;AACPX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,GAAX,EAArB;AACD;AACDX,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mBAAX,EAArB;AACD,KALD;AAMD,GAPD;;AASI,SAAOjB,GAAP;AACH,C","file":"profile.js","sourcesContent":["import mongoose  from \"mongoose\";\nimport { Router } from \"express\";\nimport User from \"../model/user\"\nimport bodyPaser from \"body-parser\";\nimport Review  from \"../model/review\";\n\nimport {authenticate}  from '../middleware/authMiddleware';\n\n\n\nexport default ({config, db}) => {\n    let api = Router();\n\n\n    //add v1 routers\n    api.post('/add',authenticate, (req,res) => {\n       let newUser = new User();\n\n        newUser.email = req.body.email;\n        newUser.first_name = req.body.first_name;\n        newUser.last_name  = req.body.last_name;\n        newUser.about = req.body.about;\n        newUser.phone = req.body.phone;\n        newUser.verified  = req.body.verified;\n        newUser.profile_image_uri = req.body.profile_image_uri;\n\n      newUser.save(err => {\n          if (err){\n            res.status(500).json({ message: err });\n          }\n            res.status(200).json({message: 'successfully  created new account'});\n\n    });\n  });\n\n\n  // 'v1/user/byEmail/:email'\n  api.get('/byEmail/:email', authenticate, (req, res) => {\n    User.findOne({ 'email': req.params.email })\n      .exec((err, userData) => {\n        if (err) {\n          res.status(500).json({ message: err });\n        }\n        res.status(200).json(userData);\n      });\n  });\n\n// update profile\n  api.put('/:id', (req,res) => {\n  User.findById(req.params.id, (err, user) => {\n    if (err){\n      res.send(err);\n    }\n    newUser.first_name = req.body.first_name;\n    newUser.last_name  = req.body.last_name;\n    newUser.about = req.body.about;\n    newUser.phone = req.body.phone;\n    newUser.verified  = req.body.verified;\n    newUser.profile_image_uri = req.body.profile_image_uri;\n\n  newUser.save(err => {\n      if (err){\n        res.status(500).json({ message: err });\n      }\n        res.status(200).json({message: 'successfully  updated'});\n   });\n});\n\n});\n\n\n// '/vq/user/:id' -Delete\napi.delete('/:id', authenticate, (req, res) => {\n  User.remove({\n    _id: req.params.id\n  }, (err, user) => {\n    if (err) {\n      res.status(500).json({ message: err });\n    }\n    res.status(200).json({ message: 'User Successfully Removed'});\n  });\n});\n\n// '/v1/user/' - Delete all\napi.delete('/', authenticate, (req, res) => {\n  User.find({}, (err, users) => {\n    if (err) {\n      res.status(500).json({ message: err });\n    }\n    res.status(200).json({ message: 'Users All Removed'});\n  });\n});\n\n    return api;\n}\n"]}